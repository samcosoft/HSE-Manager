@using Samco_HSE.HSEData
@using FilterType = Syncfusion.Blazor.DropDowns.FilterType
@{
    if (IsMultiselect)
    {
        <SfListBox @ref="_rigListBox" TItem="Rig" TValue="string[]" DataSource="@DataSource" Value="_selRigs"
                   Enabled="!IsReadonly" ValueChanged="SelectedRigListChanged"
                   AllowFiltering="true" FilterType="FilterType.Contains">
            <ListBoxSelectionSettings ShowCheckbox="true" />
            <ListBoxFieldSettings Text="Name" Value="Oid" />
        </SfListBox>
    }
    else
    {
        <SfComboBox TItem="Rig" TValue="int?"
                    DataSource="@DataSource" Placeholder="الزامی" FilterType="FilterType.Contains"
                    Value="_selectedRig" ValueChanged="ComboRigChanged" AllowCustom="false" AllowFiltering="true" Enabled="!IsReadonly">
            <ComboBoxFieldSettings Text="Name" Value="Oid" />
        </SfComboBox>
    }
}

@code {

    [Parameter]
    public IEnumerable<Rig> DataSource { get; set; } = null!;

    // [Parameter]
    // public Session Session { get; set; } = null!;

    [Parameter]
    public bool IsReadonly { get; set; }

    private SfListBox<string[], Rig>? _rigListBox;

    private string[]? _selRigs;

    [Parameter]
    public IEnumerable<Rig>? SelectedRigs
    {
        get => _selRigs == null ? Enumerable.Empty<Rig>() : _rigListBox!.GetDataByValue(_selRigs);
        set
        {
            if (value == null) return;
            _selRigs = value.Select(x => x.Oid.ToString()).ToArray();
        }
    }
    
    private void SelectedRigListChanged(string[] obj)
    {
        _selRigs = obj;
        SelectedRigsChanged.InvokeAsync(_rigListBox!.GetDataByValue(_selRigs));
    }

    [Parameter]
    public EventCallback<IEnumerable<Rig>> SelectedRigsChanged { get; set; }

    private int? _selectedRig;

    [Parameter]
    public Rig? SelectedRig
    {
        get => DataSource.FirstOrDefault(x=>x.Oid == _selectedRig);
        set
        {
            if (value == null) return;
            _selectedRig = value.Oid;
        }
    }
    
    private void ComboRigChanged(int? obj)
    {
        _selectedRig = obj;
        SelectedRigChanged.InvokeAsync(DataSource.FirstOrDefault(x=>x.Oid == _selectedRig));
    }

    [Parameter]
    public EventCallback<Rig> SelectedRigChanged { get; set; }

    [Parameter]
    public bool IsMultiselect { get; set; }

}