@using Samco_HSE.HSEData
@inject ISnackbar Snackbar
@inject IStringLocalizer<Resource> L

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.AddHomeWork" Class="me-3 mb-1" />
            @L["Projects_LocationTitle"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Label="@L["Rig_ModalLocationName"]" Variant="Variant.Outlined" AutoFocus="true" @bind-Value="@(SelRig.Name)" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@L["CancelButtonText"]</MudButton>
        <MudButton Color="Color.Success" IconClass="fas fa-check" OnClick="Submit">@L["ConfirmButtonText"]</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public Rig SelRig { get; set; } = null!;

    private void Submit()
    {
        if (SelRig.Name == null)
        {
            Snackbar.Add(L["RigModal_LocationNameRequiredError"], Severity.Error);
            return;
        }
        var prevRig = SelRig.Session.Query<Rig>().FirstOrDefault(x => x.Name == SelRig.Name);
        if (prevRig != null && prevRig.Name == SelRig.Name && prevRig.Oid != SelRig.Oid)
        {
            Snackbar.Add(L["RigModal_LocationExistedError"], Severity.Error);
            return;
        }
        SelRig.Save();
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();
}