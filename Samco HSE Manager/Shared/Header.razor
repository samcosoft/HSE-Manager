@using Samco_HSE_Manager.Authentication

<nav class="navbar header-navbar p-0">
    <button class="navbar-toggler bg-primary d-block" @onclick="OnToggleClick">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="ms-3 fw-bold row title w-100">
        <div class="col d-flex px-0 me-4 header">
            <img style="margin-right: auto" src="images/logo.svg" alt="logo" height="40">
            <h4 class="mt-2 ms-2 me-3 text-white title-text">سامانه مدیریت ایمنی، بهداشت و محیط زیست</h4>
            <div style="align-self: center; margin-right: auto">
                <AuthorizeView>
                    <Authorized>
                        <button type="button" class="btn btn-danger" @onclick="LogOut_Click">خروج از سیستم</button>
                    </Authorized>
                    <NotAuthorized>
                        <button type="button" class="btn btn-primary" @onclick="LogIn_Click">ورود به سیستم</button>
                    </NotAuthorized>
                </AuthorizeView>
            </div>

        </div>
    </div>
</nav>

@code {
    [Parameter] public bool ToggleOn { get; set; }
    [Parameter] public EventCallback<bool> ToggleOnChanged { get; set; }
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    async Task OnToggleClick() => await Toggle();

    async Task Toggle(bool? value = null)
    {
        var newValue = value ?? !ToggleOn;
        if (ToggleOn != newValue)
        {
            ToggleOn = newValue;
            await ToggleOnChanged.InvokeAsync(ToggleOn);
        }
    }

    private async void LogOut_Click()
    {
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/");
    }

    private void LogIn_Click()
    {
        NavigationManager.NavigateTo("login");
    }
}